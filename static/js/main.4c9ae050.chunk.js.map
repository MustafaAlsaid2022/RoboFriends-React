{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["Card","props","className","src","id","alt","name","email","CardList","robot","map","obj","i","key","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","e","searchField","target","value","fetch","then","response","json","users","filterRobot","filter","r","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"oOAeeA,EAbF,SAACC,GACV,OACI,yBAAKC,UAAW,qDACZ,yBAAKC,IAAG,+BAA4BF,EAAMG,GAAlC,YAAgDC,IAAI,UAC5D,6BACI,4BAAKJ,EAAMK,MACX,2BAAIL,EAAMM,UCmBXC,EAtBE,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAIf,OACI,6BACIA,EAAMC,KAAI,SAACC,EAAKC,GACZ,OACI,kBAAC,EAAD,CAAMC,IAAKD,EACPR,GAAIK,EAAMG,GAAGR,GACbE,KAAMG,EAAMG,GAAGN,KACfC,MAAOE,EAAMG,GAAGL,aCDzBO,EAbG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAEhB,OACI,6BACI,2BAAOb,UAAY,gCAClBc,KAAK,SACLC,YAAY,gBACZC,SAAYH,MCIVI,G,MAXA,SAAClB,GAEhB,OACI,yBAAKmB,MAAS,CAACC,UAAU,SAAUC,OAAO,kBAAmBC,OAAO,UACjEtB,EAAMuB,YC0BEC,E,kDA3BX,aAAc,IAAD,8BACT,gBACKC,MAAQ,CACTC,UAAU,GAHL,E,8DAQKC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAS,M,+BAM1B,OAAGG,KAAKJ,MAAMC,SACL,oEAGFG,KAAK7B,MAAMuB,a,GArBGQ,aCgDZC,E,kDAxCX,aAAe,IAAD,8BACV,gBAaJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAEK,YAAaD,EAAEE,OAAOC,SAbtC,EAAKZ,MAAQ,CACTjB,MAAO,GACP2B,YAAa,IAJP,E,gEAQO,IAAD,OAChBG,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAAEtB,MAAOkC,S,+BAOpC,IAAD,EAC0Bb,KAAKJ,MAA5BjB,EADH,EACGA,MAAO2B,EADV,EACUA,YACTQ,EAAcnC,EAAMoC,QAAO,SAACC,GAC9B,OAAOA,EAAExC,KAAKyC,cAAcC,SAASZ,MAGzC,OAAQ3B,EAAMwC,OAGN,yBAAK/C,UAAU,MACX,wBAAIA,UAAU,MAAd,eACA,kBAAC,EAAD,CAAWa,aAAce,KAAKI,iBAC9B,kBAAC,EAAD,KACI,kBAAC,EAAD,KACA,kBAAC,EAAD,CAAUzB,MAAOmC,OAP7B,2C,GA1BMZ,a,MCAlBkB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.4c9ae050.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <div className= 'tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow'>\r\n            <img src = {`https://robohash.org/${props.id}?200x200`} alt=\"Robot\" />\r\n            <div>\r\n                <h2>{props.name}</h2>\r\n                <p>{props.email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Card","import React from 'react'\r\nimport Card from './Card'\r\n\r\n\r\n\r\nconst CardList = ({robot}) => {\r\n\r\n  \r\n\r\n    return (\r\n        <div>{\r\n            robot.map((obj, i) => {\r\n                return (\r\n                    <Card key={i}\r\n                        id={robot[i].id}\r\n                        name={robot[i].name}\r\n                        email={robot[i].email} />\r\n                )\r\n        \r\n            })\r\n\r\n            }</div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default CardList","import React from 'react'\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n\r\n    return (\r\n        <div>\r\n            <input className = 'pa3 b--green bg-lightest-blue'\r\n             type='search' \r\n             placeholder='search robots'\r\n             onChange = {searchChange}\r\n             />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n\r\n","import React from 'react'\r\n\r\nconst Scroll = (props) => {\r\n  \r\nreturn(\r\n    <div style = {{overflowY:'scroll', border:'1px solid black', height:'800px'}} >\r\n      {props.children}  \r\n    </div>\r\n)\r\n\r\n\r\n}\r\n\r\nexport default Scroll","import React, {Component} from 'react'\r\n\r\n\r\nclass ErrorBoundry extends Component {\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            hasError: false\r\n\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState({hasError:true})\r\n\r\n    }\r\n\r\n    render(){\r\n\r\n      if(this.state.hasError){\r\n        return <h1>ooops, Card List cannot be displayed</h1>\r\n      }\r\n      \r\n      return this.props.children\r\n      \r\n\r\n    }\r\n\r\n  \r\n}\r\n\r\nexport default ErrorBoundry\r\n","import React, { Component } from 'react'\r\nimport CardList from '../components/CardList'\r\n//import { robot } from './robots'\r\nimport SearchBox from '../components/SearchBox'\r\nimport './App.css'\r\nimport Scroll from '../components/Scroll'\r\nimport ErrorBoundry from '../components/ErrorBoundry'\r\n\r\n\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robot: [],\r\n            searchField: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => this.setState({ robot: users }))\r\n    }\r\n\r\n    onSearchChange = (e) => {\r\n        this.setState({ searchField: e.target.value })\r\n    }\r\n\r\n    render() {\r\n        const { robot, searchField } = this.state\r\n        const filterRobot = robot.filter((r) => {\r\n            return r.name.toLowerCase().includes(searchField)\r\n        })\r\n\r\n        return !robot.length ?\r\n            <h1>Loading</h1> :\r\n            (\r\n                <div className='tc'>\r\n                    <h1 className='f1'>RoboFriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange} />\r\n                    <Scroll>\r\n                        <ErrorBoundry>\r\n                        <CardList robot={filterRobot} />\r\n                        </ErrorBoundry>\r\n                    </Scroll>\r\n                </div>\r\n            )\r\n    }\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\n//import CardList from \"./components/CardList\"\nimport 'tachyons'\n//import {robot} from './components/robots'\n\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}